name: AVDump3

on:
  push:
    tags: [ 'B[0-9]+-GitHubRelease' ]
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-avd3-native:
    name: build-avd3-native/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        include: 
        - os: windows-latest
          platform: windows
        - os: ubuntu-latest
          platform: linux
          
    steps:
    - name: AVD3Native-Checkout
      uses: actions/checkout@v2.1.0

    - name: AVD3Native-Compile-Linux
      if: matrix.platform == 'linux'
      run: |         
        make -C AVDump3NativeLib

    - name: AVD3Native-ArtifactUpload-Linux
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v2
      with:
        name: AVDump3NativeLib.Linux
        path: ${{ github.workspace }}/AVDump3NativeLib/AVDump3NativeLib.so


    - name: AVD3Native-MSBuildSetup-Windows
      if: matrix.platform == 'windows'
      uses: microsoft/setup-msbuild@v1.0.3

    - name: AVD3Native-Compile-Windows
      if: matrix.platform == 'windows'
      run: |
        msbuild AVDump3.sln /t:AVDump3NativeLib /p:Configuration="GithubWorkflow" /p:Platform="x64" /p:BuildProjectReferences=false

    - name: AVD3Native-ArtifactUpload-Windows
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v2
      with:
        name: AVDump3NativeLib.Windows
        path: ${{ github.workspace }}\AVDump3NativeLib\x64\GithubWorkflow\AVDump3NativeLib.dll

  build-avd3-main:
    needs: build-avd3-native
    runs-on: ubuntu-latest
    steps:
    - name: AVD3Main-Checkout
      uses: actions/checkout@v2
      
    - name: AVD3Main-DotNetSetup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: AVD3Main-DownloadArtifacts
      uses: actions/download-artifact@v2
      with:
        path: ${{ github.workspace }}/AVDump3CL/bin/GithubWorkflow/net6.0/
    
    - name: AVDMain-MoveArtifacts
      run: |
        find $GITHUB_WORKSPACE/AVDump3CL/bin/GithubWorkflow/net6.0/ -type f -print -exec mv {} $GITHUB_WORKSPACE/AVDump3CL/bin/GithubWorkflow/net6.0/ \;
        rm -R -- $GITHUB_WORKSPACE/AVDump3CL/bin/GithubWorkflow/net6.0/*/
    
    - name: AVD3Main-Compile
      run: dotnet build --configuration GithubWorkflow        
      
    - name: AVD3Main-CopyLibs  
      run: |
        cp $GITHUB_WORKSPACE/AVDump3Lib/Libs/MediaInfo.* $GITHUB_WORKSPACE/AVDump3CL/bin/GithubWorkflow/net6.0/
      
    - name: AVD3Main-ArtifactUpload
      uses: actions/upload-artifact@v2
      with:
        name: AVDump3CL
        path: ${{ github.workspace }}/AVDump3CL/bin/GithubWorkflow/net6.0/

  release-avd3-main:
    if: contains(github.ref, 'tags/B')
    runs-on: ubuntu-latest
    needs: build-avd3-main

    steps:
    - name: AVD3Release-DownloadArtifacts
      uses: actions/download-artifact@v2
      with:
        name: AVDump3CL
        path: ${{ github.workspace }}/AVDump3CL

    - name: AVD3Release-GetTag
      id: avd3releasegettag
      uses: olegtarasov/get-tag@v2.1
      with:
        tagRegex: "B(\\d+)"
      
    - name: AVD3Release-CompressAsset
      run: |
        cd ${{ github.workspace }}/AVDump3CL
        zip -r ${{ github.workspace }}/AVDump3CL-B${{ steps.avd3releasegettag.outputs.tag }}.zip ${{ github.workspace }}/AVDump3CL
     
    - name: AVD3Release-Create
      id: avd3releasecreate
      uses: softprops/action-gh-release@v1
      with:
        name: Build ${{ steps.avd3releasegettag.outputs.tag }}
        draft: false
        prerelease: false
        files: ${{ github.workspace }}/AVDump3CL-B${{ steps.avd3releasegettag.outputs.tag }}.zip
